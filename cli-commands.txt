fronk @ /home/fronk üòí > syno as --help           

  Usage: audiostation|as [options] <method>

  DSM Audio Station API

  Options:

    -h, --help                       output usage information
    -c, --config <path>              DSM configuration file. Default to ~/.syno/config.yaml
    -u, --url <url>                  DSM URL. Default to https://admin:password@localhost:5001
    -p, --payload <payload>          JSON Payload
    -P, --pretty                     Prettyprint JSON Output
    -d, --debug                      Enabling Debugging Output
    -a, --api <version>              DSM API Version. Default to 6.0.2
    -i, --ignore-certificate-errors  Ignore certificate errors

  Examples:

    $ syno audiostation|as listSongs --payload '{"limit":1}'
    $ syno audiostation|as listAlbums
    $ syno audiostation|as searchSong --payload '{"title":"victoria"}'

  Available methods:

    $ syno as reorderPin
    $ syno as unPin
    $ syno as renamePin
    $ syno as pin
    $ syno as listPins
    $ syno as getInfoTag
    $ syno as listTags
    $ syno as getInfo
    
    {
      "browse_personal_library": "all",
      "dsd_decode_capability": true,
      "enable_equalizer": false,
      "enable_personal_library": false,
      "enable_user_home": false,
      "has_music_share": true,
      "is_manager": true,
      "playing_queue_max": 8192,
      "privilege": {
        "playlist_edit": true,
        "remote_player": true,
        "sharing": true,
        "tag_edit": true,
        "upnp_browse": true
      },
      "remote_controller": false,
      "same_subnet": true,
      "serial_number": "1510MQN059500",
      "settings": {
        "audio_show_virtual_library": true,
        "disable_upnp": false,
        "enable_download": false,
        "prefer_using_html5": true,
        "transcode_to_mp3": true
      },
      "sid": "Xf8G2zK.wDpjw1510MQN059500",
      "support_bluetooth": true,
      "support_usb": true,
      "support_virtual_library": true,
      "transcode_capability": [
        "wav",
        "mp3"
      ],
      "version": 3093,
      "version_string": "6.0.2-3093"
    }

    $ syno as listAlbums
    $ syno as listComposers
    $ syno as listGenres
    $ syno as listDefaultGenres
    $ syno as listArtists
    $ syno as listFolders
    $ syno as getInfoFolder
    $ syno as listSongs
    $ syno as searchSong - takes title as input

    {
      "offset": 0,
      "songs": [
        {
          "id": "music_3688",
          "path": "/music/[2014] „Åã„Çì„Åì„ÅÜ/01 - bowling girl.mp3",
          "title": "bowling girl",
          "type": "file"
        }
      ],
      "total": 1
    }

    $ syno as getInfoSong - takes id as input

    {
      "songs": [
        {
          "id": "music_3688",
          "path": "/music/[2014] „Åã„Çì„Åì„ÅÜ/01 - bowling girl.mp3",
          "title": "bowling girl",
          "type": "file"
        }
      ]
    }

    $ syno as setRatingSong
    $ syno as setSharingSong
    $ syno as getSharingSong
    $ syno as stream
    $ syno as transcodeStream
    $ syno as listRadios
    $ syno as addRadio
    $ syno as searchRadio
    $ syno as updatesRadio
    $ syno as listPlays
    $ syno as getInfoPlaylist
    $ syno as createPlaylist
    $ syno as deletePlaylist
    $ syno as renamePlaylist
    $ syno as copyTolibraryPlaylist
    $ syno as updatesongsPlaylist
    $ syno as createSmartPlaylist
    $ syno as updatesmartPlaylist
    $ syno as editSharingPlaylist
    $ syno as savePlayIngPlaylist
    $ syno as saveSearchPlaylist
    $ syno as removeMissingPlaylist
    $ syno as listRemotePlayers
    $ syno as getInfoRemotePlayer
    $ syno as getStatusRemotePlayer
    $ syno as getPlayListRemotePlayer
    $ syno as updatePlayListRemotePlayer
    $ syno as controlRemotePlayer
    $ syno as setMultipleRemotePlayer
    $ syno as testPasswordRemotePlayer
    $ syno as setPasswordRemotePlayer
    $ syno as getStatusRemotePlayerStatus
    $ syno as getPlayListWebPlayer - get now playing playlist

    {
      "current": 0,
      "mode": "normal",
      "shuffle": 0,
      "songs": [
        {
          "id": "music_3945",
          "path": "/music/[2015] Revolution In The Summer ep/01 - Revolution In The Summer.mp3",
          "title": "Revolution In The Summer",
          "type": "file"
        },
        {
          "id": "music_3947",
          "path": "/music/[2015] Revolution In The Summer ep/02 - Eye and my.mp3",
          "title": "Eye and my",
          "type": "file"
        },
        {
          "id": "music_3949",
          "path": "/music/[2015] Revolution In The Summer ep/03 - Salute tomorrow.mp3",
          "title": "Salute tomorrow",
          "type": "file"
        }
      ],
      "timestamp": 1486024883,
      "total": 3
    }

    $ syno as updatePlayListWebPlayer
    $ syno as getStreamIdProxy
    $ syno as streamProxy
    $ syno as getSonginfoProxy
    $ syno as deleteSonginfoProxy
    $ syno as getLyrics
    $ syno as setLyrics
    $ syno as searchLyricsLyricsSearch
    $ syno as listMediaServers
    $ syno as getSongCover
    $ syno as getFolderCover
    $ syno as getCover
    $ syno as download
    $ syno as listSearches
